install.packages("seewave")
library(seewave)
install.packages("provenance")
library(provenance)
library(ggplot2)
install.packages("vegan")
library(vegan)
install.packages("geosphere")
library(geosphere)
install.packages("textmineR")
library(textmineR)



#hirechical data model sd elevate from 0.5 to 2
genDat1<-function(){
  mu_0<-rep(10,40)
  psd0<-rep(0.1,40)
  mu0<-rep(NA,40)
  for (i in 1:40){
    mu0[i]<-rnorm(1,mu_0[i],psd0[i])
  }
  sd0<-rep(c(0.5,1,1.5,2),each=10)
  for (i in 1:40){
    sd0[i]<-rnorm(1,sd0[i],psd0)
  }
  age <- rep(1:4, each=10)
  #create the matrix
  N <- length(age)
  n <- 1000
  dat <- matrix(0, N, n)
  for(j in 1:N){
    dat[j,] <- rnorm(n, mu0[j], sd0[j])
  }
  return(dat)
}




#hirechical data model sd stay stable
genDat2<-function(){
  mu_1<-rep(10,40)
  psd1<-rep(0.1,40)
  mu1<-rep(NA,40)
  for (i in 1:40){
    mu1[i]<-rnorm(1,mu_1[i],psd1[i])
  }
  sd1<-rep(0.5,40)
  for (i in 1:40){
    sd1[i]<-rnorm(1,sd1[i],psd1)
  }
  age <- rep(1:4, each=10)
  #create the matrix
  N<-length(age)
  n <-1000
  dat2<- matrix(0, N, n)
  for(j in 1:N){
    dat2[j,] <- rnorm(n, mu1[j], sd1[j])
  }
  return(dat2)
}




##sd first increase then decrease
genDat3<-function(){
  mu_2<-rep(10,40)
  psd2<-rep(0.1,40)
  mu2<-rep(NA,40)
  for (i in 1:40){
    mu2[i]<-rnorm(1,mu_2[i],psd2[i])
  }
  sd2<-rep(c(0.5,1,1,0.5),each=10)
  for (i in 1:40){
    sd2[i]<-rnorm(1,sd2[i],psd2)
  }
  age <- rep(1:4, each=10)
  #create the matrix
  N<-length(age)
  n <-1000
  dat3<- matrix(0, N, n)
  for(j in 1:N){
    dat3[j,] <- rnorm(n, mu2[j], sd2[j])
  }
  return(dat3)
}

# first method to calculate the pho value
rho_calc1 <- function(dat, age, grid_num=1000){
  grid_num=1000
  N <- length(age)
  dist_mat1 <- matrix(0, N, N)
  dist_mat2 <- matrix(0, N, N)
  dist_mat3 <- matrix(0, N, N)
  for(i in 1:(N-1)){
    for(j in (i+1):N){
      a <- dat[i,]
      b <- dat[j,]
      grid_min <- min(c(a, b))
      grid_max <- max(c(a, b))
      d <- density(a, n=grid_num, from=grid_min, to=grid_max)
      pad <- d$y
      pa <- pad/sum(pad)
      d <- density(b, n=grid_num, from=grid_min, to=grid_max)
      pbd <- d$y
      pb <- pbd/sum(pbd)
      dist_mat1[i,j] <- sqrt(sum((sqrt(pa) - sqrt(pb))^2))/sqrt(2)
      dist_mat2[i,j] <- CalcJSDivergence(pa,pb)
      dist_mat3[i,j]<-KS.diss(pa,pb)
    }
  }
  dist_mat1_2 <- dist_mat1 + t(dist_mat1)
  dist_mat2_2 <- dist_mat2 + t(dist_mat2)
  dist_mat3_2<-dist_mat3 + t(dist_mat3)
  age_dist <- as.matrix(abs(dist(age)))
  rho1 <- cor(dist_mat1_2[upper.tri(dist_mat1_2)], age_dist[upper.tri(age_dist)], method="spearman")
  rho2 <- cor(dist_mat2_2[upper.tri(dist_mat2_2)], age_dist[upper.tri(age_dist)], method="spearman")
  rho3 <- cor(dist_mat3_2[upper.tri(dist_mat3_2)], age_dist[upper.tri(age_dist)], method="spearman")
  return(c(rho1,rho2,rho3))
}


#using mantel test to test for signifance
rho_calc2 <- function(dat, age, grid_num=1000){
  grid_num=1000
  N <- length(age)
  dist_mat1 <- matrix(0, N, N)
  dist_mat2 <- matrix(0, N, N)
  dist_mat3 <- matrix(0, N, N)
  for(i in 1:(N-1)){
    for(j in (i+1):N){
      a <- dat[i,]
      b <- dat[j,]
      grid_min <- min(c(a, b))
      grid_max <- max(c(a, b))
      d <- density(a, n=grid_num, from=grid_min, to=grid_max)
      pad <- d$y
      pa <- pad/sum(pad)
      d <- density(b, n=grid_num, from=grid_min, to=grid_max)
      pbd <- d$y
      pb <- pbd/sum(pbd)
      dist_mat1[i,j] <- sqrt(sum((sqrt(pa) - sqrt(pb))^2))/sqrt(2)
      dist_mat2[i,j] <- CalcJSDivergence(pa,pb)
      dist_mat3[i,j]<-KS.diss(pa,pb)
    }
  }
  dist_mat1_2 <- dist_mat1 + t(dist_mat1)
  dist_mat2_2 <- dist_mat2 + t(dist_mat2)
  dist_mat3_2<-dist_mat3 + t(dist_mat3)
  age_dist <- as.matrix(abs(dist(age)))
  rho1 <-mantel(dist_mat1_2,age_dist,method="spearman")
  rho2 <-mantel(dist_mat2_2,age_dist,method="spearman")
  rho3 <-mantel(dist_mat3_2,age_dist,method="spearman")
  return(c(rho1$signif,rho2$signif,rho3$signif))
}

#run the simulation
correlation_matrix<-matrix(0,nrow=20000,ncol=3)
pvalue_matrix<-matrix(0,nrow=20000,ncol=3)
pseudobulk<-NA
set.seed(100)
age <- rep(1:4, each=10)
for(i in 1:18000){
  dat1<-genDat2()
  correlation_matrix[i,]<-rho_calc1(dat1,age)
  pvalue_matrix[i,]<-rho_calc2(dat1,age)
  pseudobulk[i]<-cor(apply(dat1,1,mean),age,method="spearman")
  print(i)
}
for(i in 18001:19000){
  dat2<-genDat1()
  correlation_matrix[i,]<-rho_calc1(dat2,age)
  pvalue_matrix[i,]<-rho_calc2(dat2,age)
  pseudobulk[i]<-cor(apply(dat2,1,mean),age,method="spearman")
  print(i)
}
for(i in 19001:20000){
  dat3<-genDat3()
  correlation_matrix[i,]<-rho_calc1(dat3,age)
  pvalue_matrix[i,]<-rho_calc2(dat3,age)
  pseudobulk[i]<-cor(apply(dat3,1,mean),age,method="spearman")
  print(i)
}

#run the simulation
correlation_matrix<-matrix(0,nrow=20000,ncol=3)
pvalue_matrix<-matrix(0,nrow=20000,ncol=3)
pseudobulk<-NA
set.seed(100)
age <- rep(1:4, each=10)
for(i in 1:18000){
  dat1<-genDat2()
  correlation_matrix[i,]<-rho_calc1(dat1,age)
  pvalue_matrix[i,]<-rho_calc2(dat1,age)
  pseudobulk[i]<-cor(apply(dat1,1,mean),age,method="spearman")
  print(i)
}
for(i in 18001:19000){
  dat2<-genDat1()
  correlation_matrix[i,]<-rho_calc1(dat2,age)
  pvalue_matrix[i,]<-rho_calc2(dat2,age)
  pseudobulk[i]<-cor(apply(dat2,1,mean),age,method="spearman")
  print(i)
}
for(i in 19001:20000){
  dat3<-genDat3()
  correlation_matrix[i,]<-rho_calc1(dat3,age)
  pvalue_matrix[i,]<-rho_calc2(dat3,age)
  pseudobulk[i]<-cor(apply(dat3,1,mean),age,method="spearman")
  print(i)
}

names<-c("stable.png","increase.png","non_monotone.png")

# plot pearson correlation result and visulize it 
result_matrix<-array(0,dim=c(3,3,3))
for (t in 1:3){
  mark<-list(c(1,18000),c(18001,19000),c(19001,20000))
  a<-min(mark[[t]])
  b<-max(mark[[t]])
  test_data<-reshape2::melt(correlation_matrix[(a:b),])
  colnames(test_data)<-c("sample","group","value")
  test_data$group<-as.factor(test_data$group)
  test_data$group<-c(rep("HL",(b-a+1)),rep("JS",(b-a+1)),rep("KS",(b-a+1)))
  p<-ggplot(test_data, aes(x=group, y=value,color=group))+ 
    geom_boxplot()+theme(text = element_text(size = 24))
  ggsave(names[t], width = 20, height = 13, units = "cm")
  rownames(result_matrix[t,,])<-c("HL","JS","KS")
  colnames(result_matrix[t,,])<-c("max","min","mean")
  result_matrix[t,1,1]<-max(correlation_matrix[(a:b),1])
  result_matrix[t,1,2]<-min(correlation_matrix[(a:b),1])
  result_matrix[t,1,3]<-mean(correlation_matrix[(a:b),1])
  result_matrix[t,2,1]<-max(correlation_matrix[(a:b),2])
  result_matrix[t,2,2]<-min(correlation_matrix[(a:b),2])
  result_matrix[t,2,3]<-mean(correlation_matrix[(a:b),2])
  result_matrix[t,3,1]<-max(correlation_matrix[(a:b),3])
  result_matrix[t,3,2]<-min(correlation_matrix[(a:b),3])
  result_matrix[t,3,3]<-mean(correlation_matrix[(a:b),3])
}


# calculate method 2's result and visulize it
p_new<-matrix(0,nrow=20000,ncol=3)
p_new[,1]<-p.adjust(pvalue_matrix[,1],method="BH")
p_new[,2]<-p.adjust(pvalue_matrix[,2],method="BH")
p_new[,3]<-p.adjust(pvalue_matrix[,3],method="BH")
for(t in 1:3){
  a<-min(mark[[t]])
  b<-max(mark[[t]])
  test_data<-reshape2::melt(p_new[(a:b),])
  colnames(test_data)<-c("sample","group","p_value")
  test_data$group<-as.factor(test_data$group)
  test_data$group<-c(rep("HL",(b-a+1)),rep("JS",(b-a+1)),rep("KS",(b-a+1)))
  p<-ggplot(test_data, aes(x=group, y=p_value,color=group)) +
    geom_boxplot()+theme(text = element_text(size = 24))
  ggsave(names[t], width = 20, height = 13, units = "cm")
}

#pseudo bulk's result
test_data2<-as.data.frame(cbind(1:20000,pseudobulk))
colnames(test_data2)<-c("group","value")
test_data2$group=c(rep("increasing",18000),rep("non-mono",1000),rep("stable",1000))
p<-ggplot(test_data2, aes(x=group, y=value,color=group)) +
  geom_boxplot()+theme(text = element_text(size = 24))+
  ylab("correlation coefficent")
ggsave("pseudo_bulk.png", width = 20, height = 13, units = "cm")
